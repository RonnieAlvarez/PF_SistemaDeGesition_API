<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        BYW/7+r3WWSiAAAAAElFTkSuQmCC
</value>
  </data>
</root>